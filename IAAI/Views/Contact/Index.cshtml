@model IAAI.Models.ViewModels.ContactViewModel


@using (Html.BeginForm("Index", "Contact"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control", @style = "width:150px" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @style = "height:200px;" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Captcha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Captcha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Captcha, "", new { @class = "text-danger" })

            </div>
            <div class="col-sm-4">
                <img src="@Url.Action("GenerateCaptcha", "Captcha")" id="CaptchaImg" alt="Captcha Image">
                <button type="button" id="RefreshCaptcha" onclick="reloadCaptcha()">重新載入</button>
            </div>
        </div>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="送 出" class="btn btn-primary solid blank" />
            </div>
        </div>
    </div>
}

@section scripts{
    @if (TempData["Message"] != null)
    {
        <script>
            alert("@TempData["Message"]");
        </script>
    }

    <script>
        function reloadCaptcha() {
            document.getElementById("CaptchaImg").src = '@Url.Action("GenerateCaptcha", "Captcha")?' + new Date().getTime();
    }
    </script>
}
