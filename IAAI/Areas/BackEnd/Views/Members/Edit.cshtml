@model IAAI.Models.Member


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Password)
    @Html.HiddenFor(model => model.PasswordSalt)
    @Html.HiddenFor(model => model.MembershipCertificateUrl)
    @Html.HiddenFor(model => model.IsDelete)
    @Html.HiddenFor(model => model.CreatedTime)
    @Html.HiddenFor(model => model.Creator)
    @*@Html.HiddenFor(model => model.Birthday)*@

    <div class="form-group">
        @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        更改密碼：
        <div class="col-md-10">
            <input type="password" name="newPassword" id="newPassword" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsApproved)
                @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<input type="text" class="form-control" value="@Model.Birthday.ToString("yyyy/MM/dd")" disabled />*@
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control",@type="date" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MemberType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MemberType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MemberType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplyingMemberType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.ApplyingMemberType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ApplyingMemberType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublicContactPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PublicContactPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PublicContactPhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsInternationalMembership, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsInternationalMembership)
                @Html.ValidationMessageFor(model => model.IsInternationalMembership, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MembershipCertificateUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (string.IsNullOrEmpty(Model.MembershipCertificateUrl))
            {
                @Html.Label("未上傳檔案")
            }
            else
            {
                <a href="@Model.MembershipCertificateUrl">會員證影本</a>
                
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentCompany, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentCompany, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrentCompany, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HighestEducation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HighestEducation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HighestEducation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceUnit1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceUnit1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceUnit1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceUnit1Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceUnit1Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceUnit1Position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">服務經歷1開始年月：</label>
        <div class="d-flex">
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit1StartYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "年" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit1StartYear, "", new { @class = "text-danger" })
            </div>
            年
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit1StartMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "月" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit1StartMonth, "", new { @class = "text-danger" })
            </div>
            月
            <div class="col-sm-3">
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">服務經歷1結束年月：</label>
        <div class="d-flex">
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit1EndYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "年" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit1EndYear, "", new { @class = "text-danger" })
            </div>
            年
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit1EndMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "月" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit1EndMonth, "", new { @class = "text-danger" })
            </div>
            月
            <div class="col-sm-3">
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceUnit2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceUnit2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceUnit2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceUnit2Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceUnit2Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceUnit2Position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">服務經歷2開始年月：</label>
        <div class="d-flex">
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit2StartYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "年" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit2StartYear, "", new { @class = "text-danger" })
            </div>
            年
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit2StartMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "月" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit2StartMonth, "", new { @class = "text-danger" })
            </div>
            月
            <div class="col-sm-3">
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">服務經歷2結束年月：</label>
        <div class="d-flex">
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit2EndYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "年" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit2EndYear, "", new { @class = "text-danger" })
            </div>
            年
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit2EndMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "月" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit2EndMonth, "", new { @class = "text-danger" })
            </div>
            月
            <div class="col-sm-3">
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceUnit3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceUnit3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceUnit3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceUnit3Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceUnit3Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceUnit3Position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">服務經歷3開始年月：</label>
        <div class="d-flex">
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit3StartYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "年" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit3StartYear, "", new { @class = "text-danger" })
            </div>
            年
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit3StartMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "月" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit3StartMonth, "", new { @class = "text-danger" })
            </div>
            月
            <div class="col-sm-3">
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">服務經歷3結束年月：</label>
        <div class="d-flex">
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit3EndYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "年" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit3EndYear, "", new { @class = "text-danger" })
            </div>
            年
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ServiceUnit3EndMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "月" } })
                @Html.ValidationMessageFor(model => model.ServiceUnit3EndMonth, "", new { @class = "text-danger" })
            </div>
            月
            <div class="col-sm-3">
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalExperienceYears, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalExperienceYears, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalExperienceYears, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalExperienceMonths, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalExperienceMonths, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalExperienceMonths, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
