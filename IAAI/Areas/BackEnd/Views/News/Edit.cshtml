@model IAAI.Models.News



@using (Html.BeginForm("Edit", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>News</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ImageUrl)
    @Html.HiddenFor(model => model.IsDelete)
    @*@Html.HiddenFor(model => model.UpdatedBy)*@
    @*@Html.HiddenFor(model=>model.UpdatedTime)*@
    @Html.HiddenFor(model => model.Creator)
    @Html.HiddenFor(model => model.CreatedTime)
    @Html.HiddenFor(model => model.ViewCount)
    <input type="hidden" name="page" value="@ViewBag.page" />

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img src="@Model.ImageUrl" style="width:150px;" />
            <br />
            <label>更換預覽圖：</label>
            <input type="file" name="UploadImage" class="form-control" />
            @*@Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })*@
            @*@Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsTop, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsTop)
                @Html.ValidationMessageFor(model => model.IsTop, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.IsDelete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDelete)
                    @Html.ValidationMessageFor(model => model.IsDelete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Creator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Creator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { page = ViewBag.page })
</div>

@section scripts{
    <script src="~/scripts/ckeditor/ckeditor.js" type="text/javascript"></script>
    <script>
        CKEDITOR.replace('Content', {
            height: 400, // 設定高度為 400px
            filebrowserImageUploadUrl: '/Upload/UploadImage', // 圖片上傳 API
            filebrowserImageBrowseUrl: '', // 禁用「瀏覽伺服器端」按鈕
            removePlugins: 'imagebrowser', // 完全禁用圖片瀏覽器插件
        });

        // 設置 CKEditor 的內容為模型的內容
        CKEDITOR.instances['Content'].setData(@Html.Raw(Json.Encode(Model.Content)));

    </script>
}
